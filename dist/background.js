(()=>{"use strict";({994:function(){var e=this&&this.__awaiter||function(e,o,i,t){return new(i||(i=Promise))((function(n,s){function a(e){try{c(t.next(e))}catch(e){s(e)}}function d(e){try{c(t.throw(e))}catch(e){s(e)}}function c(e){var o;e.done?n(e.value):(o=e.value,o instanceof i?o:new i((function(e){e(o)}))).then(a,d)}c((t=t.apply(e,o||[])).next())}))};let o,i=[];chrome.windows.onCreated.addListener((o=>e(void 0,void 0,void 0,(function*(){console.log("new window created");let e={window:o,tabs:{}};i.push(e),yield chrome.storage.session.set({windowsData:i})})))),chrome.runtime.onStartup.addListener((()=>e(void 0,void 0,void 0,(function*(){yield chrome.storage.session.set({shouldWakeUp:!1})})))),chrome.runtime.onConnect.addListener((t=>{console.log(`${t.name}'s port connected`),t.onMessage.addListener((n=>{"getCurrentTab"===n.action&&function(t,n){e(this,void 0,void 0,(function*(){try{o=yield chrome.tabs.query({active:!0,currentWindow:!0});for(let e=0;e<i.length;e++)if(o[0].windowId===i[e].window.id){i[e].tabs[t.additionalInfo.index]=o[0],yield chrome.storage.session.set({windowsData:i}),n.postMessage({message:"indexTabUpdate",success:!0});break}}catch(e){n.postMessage({success:!1}),console.log("error getting tab",e)}}))}(n,t),"switchTab"===n.action&&function(o,t){e(this,void 0,void 0,(function*(){let e=o.additionalInfo.indexKey,n=yield chrome.tabs.query({active:!0,currentWindow:!0});console.log("this is active window",n),console.log("this is  window",i);for(let o=0;o<i.length;o++){if(n[0].windowId===i[o].window.id){console.log("active window",n);let s=i[o].tabs[e];if(console.log("this is actibe tab",s),!s)return t.postMessage({success:!1,info:"key binding doesn't exists",message:"switchTabUpdate"}),void console.log("inside switch tab when no tab is found",s);if(n[0].id===s.id)return console.log("already on the tab"),void t.postMessage({success:!1,info:"Aleady on the tab",message:"switchTabUpdate"});try{yield chrome.tabs.update(Number(s.id),{active:!0})}catch(e){console.log("error swtiching tabs",e),t.postMessage({success:!1,info:"Error switching tab",message:"switchTabUpdate"})}break}console.log("no matching windows found for switching tabs")}}))}(n,t),"getTabs"===n.action&&function(o,t){e(this,void 0,void 0,(function*(){let e=yield chrome.windows.getLastFocused();for(let o=0;o<i.length;o++)if(e.id===i[o].window.id){t.postMessage(i[o].tabs);break}}))}(0,t),"deleteTab"===n.action&&function(o){e(this,void 0,void 0,(function*(){let e=yield chrome.windows.getLastFocused();for(let t=0;t<i.length;t++)if(e.id===i[t].window.id){delete i[t].tabs[o.key],chrome.storage.session.set({windowsData:i}),console.log("removed index");break}}))}(n),"ping"===n.action&&console.log("Received ping, service worker is alive")})),t.onDisconnect.addListener((()=>e(void 0,void 0,void 0,(function*(){console.log("port disconnected",t.name),yield chrome.storage.session.set({windowsData:i}),t.name}))))})),chrome.alarms.create("periodicCheck",{periodInMinutes:1}),function(){e(this,void 0,void 0,(function*(){var e,o;try{let t=yield chrome.storage.session.get(["windowsData"]),n=[];if(t.windowsData)console.log("This is from session:",t.windowsData),i=t.windowsData,console.log("This is windows after loading from session:",i);else{console.log("No window data; loading all tabs into windows"),n=yield chrome.windows.getAll({populate:!0});for(let e=0;e<n.length;e++){let o={window:n[e],tabs:{}};i.push(o)}}for(let t=0;t<i.length;t++){let n=null===(e=i[t].window)||void 0===e?void 0:e.tabs;if(n)for(let e=0;e<n.length;e++){let i=null===(o=n[e])||void 0===o?void 0:o.id;if(!i)throw`Tab ID invalid for tab: ${n[e]}`;console.log("executing content sscript for all the tab"),chrome.scripting.executeScript({target:{tabId:i},files:["dist/content.js"]})}else console.log("no tabs in windows")}}catch(e){console.log("Error populating window:",e)}}))}()}})[994]()})();
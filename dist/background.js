(()=>{"use strict";({994:function(){var e=this&&this.__awaiter||function(e,o,t,i){return new(t||(t=Promise))((function(s,n){function a(e){try{c(i.next(e))}catch(e){n(e)}}function d(e){try{c(i.throw(e))}catch(e){n(e)}}function c(e){var o;e.done?s(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(a,d)}c((i=i.apply(e,o||[])).next())}))};let o,t=[];chrome.windows.onCreated.addListener((e=>{console.log("new window created");let o={window:e,tabs:{}};t.push(o),chrome.storage.session.set({windowsData:t})})),chrome.runtime.onStartup.addListener((()=>e(void 0,void 0,void 0,(function*(){yield chrome.storage.session.set({shouldWakeUp:!1})})))),chrome.runtime.onConnect.addListener((i=>{console.log(`${i.name}'s port connected`),i.onMessage.addListener((s=>{"getCurrentTab"===s.action&&function(i,s){e(this,void 0,void 0,(function*(){try{o=yield chrome.tabs.query({active:!0,currentWindow:!0});for(let e=0;e<t.length;e++)if(o[0].windowId===t[e].window.id){t[e].tabs[i.additionalInfo.index]=o[0],yield chrome.storage.session.set({windowsData:t}),s.postMessage({message:"indexTabUpdate",success:!0});break}}catch(e){s.postMessage({success:!1}),console.log("error getting tab",e)}}))}(s,i),"switchTab"===s.action&&function(o,i){e(this,void 0,void 0,(function*(){let e=o.additionalInfo.indexKey,s=yield chrome.windows.getCurrent(),n=yield chrome.tabs.query({active:!0});for(let o=0;o<t.length;o++)if(s.id===t[o].window.id){let s=t[o].tabs[e];if(!s)return i.postMessage({success:!1,info:"key binding doesn't exists",message:"switchTabUpdate"}),void console.log("inside switch tab when no tab is found",s);if(n[0].id===s.id)return void i.postMessage({success:!1,info:"Aleady on the tab",message:"switchTabUpdate"});try{yield chrome.tabs.update(Number(s.id),{active:!0})}catch(e){console.log("error swtiching tabs",e),i.postMessage({success:!1,info:"Error switching tab",message:"switchTabUpdate"})}break}}))}(s,i),"getTabs"===s.action&&function(o,i){e(this,void 0,void 0,(function*(){let e=yield chrome.windows.getLastFocused();for(let o=0;o<t.length;o++)if(e.id===t[o].window.id){i.postMessage(t[o].tabs);break}}))}(0,i),"deleteTab"===s.action&&function(o){e(this,void 0,void 0,(function*(){let e=yield chrome.windows.getLastFocused();for(let i=0;i<t.length;i++)if(e.id===t[i].window.id){delete t[i].tabs[o.key],chrome.storage.session.set({windowsData:t}),console.log("removed index");break}}))}(s),"ping"===s.action&&console.log("Received ping, service worker is alive")})),i.onDisconnect.addListener((()=>e(void 0,void 0,void 0,(function*(){console.log("port disconnected",i.name),yield chrome.storage.session.set({windowsData:t}),"popup"!==i.name&&(yield chrome.storage.session.set({shouldWakeUp:!0}),console.log("set should wake up to true "))}))))})),function(){e(this,void 0,void 0,(function*(){var e,o;try{let i=yield chrome.storage.session.get(["windowsData"]),s=[];if(i.windowsData)console.log("This is from session:",i.windowsData),t=i.windowsData,console.log("This is windows after loading from session:",t);else{console.log("No window data; loading all tabs into windows"),s=yield chrome.windows.getAll({populate:!0});for(let e=0;e<s.length;e++){let o={window:s[e],tabs:{}};t.push(o)}}for(let i=0;i<t.length;i++){let s=null===(e=t[i].window)||void 0===e?void 0:e.tabs;if(s)for(let e=0;e<s.length;e++){let t=null===(o=s[e])||void 0===o?void 0:o.id;if(!t)throw`Tab ID invalid for tab: ${s[e]}`;console.log("executing content sscript for all the tab"),chrome.scripting.executeScript({target:{tabId:t},files:["dist/content.js"]})}else console.log("no tabs in windows")}}catch(e){console.log("Error populating window:",e)}}))}()}})[994]()})();
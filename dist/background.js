(()=>{"use strict";({994:function(){var o=this&&this.__awaiter||function(o,e,t,i){return new(t||(t=Promise))((function(n,s){function a(o){try{r(i.next(o))}catch(o){s(o)}}function d(o){try{r(i.throw(o))}catch(o){s(o)}}function r(o){var e;o.done?n(o.value):(e=o.value,e instanceof t?e:new t((function(o){o(e)}))).then(a,d)}r((i=i.apply(o,e||[])).next())}))};let e,t=[];chrome.windows.onCreated.addListener((o=>{console.log("new window created");let e={window:o,tabs:{}};t.push(e),chrome.storage.session.set({windowsData:t})})),chrome.runtime.onStartup.addListener((()=>o(void 0,void 0,void 0,(function*(){yield chrome.storage.session.set({shouldWakeUp:!1})})))),chrome.runtime.onConnect.addListener((i=>{console.log(`${i.name}'s port connected`),i.onMessage.addListener((n=>{"getCurrentTab"===n.action&&function(i){o(this,void 0,void 0,(function*(){try{e=yield chrome.tabs.query({active:!0,currentWindow:!0});for(let o=0;o<t.length;o++)if(e[0].windowId===t[o].window.id){t[o].tabs[i.additionalInfo.index]=e[0],yield chrome.storage.session.set({windowsData:t});let n=yield chrome.storage.session.get(["windowsData"]);console.log("this is after the update ",n);break}}catch(o){console.log("error getting tab",o)}}))}(n),"switchTab"===n.action&&function(e){o(this,void 0,void 0,(function*(){let o=e.additionalInfo.indexKey,i=yield chrome.windows.getCurrent();for(let e=0;e<t.length;e++)if(i.id===t[e].window.id){let i=t[e].tabs[o];if(!i)return void console.log("inside switch tab when no tab is found",i);chrome.tabs.update(Number(i.id),{active:!0});break}}))}(n),"getTabs"===n.action&&function(e,i){o(this,void 0,void 0,(function*(){let o=yield chrome.windows.getLastFocused();for(let e=0;e<t.length;e++)if(o.id===t[e].window.id){i.postMessage(t[e].tabs);break}}))}(0,i),"ping"===n.action&&console.log("Received ping, service worker is alive")})),i.onDisconnect.addListener((()=>o(void 0,void 0,void 0,(function*(){console.log("port disconnected",i.name),yield chrome.storage.session.set({windowsData:t}),"popup"!==i.name&&(yield chrome.storage.session.set({shouldWakeUp:!0}),console.log("set should wake up to true "))}))))})),function(){o(this,void 0,void 0,(function*(){var o,e;try{let i=yield chrome.storage.session.get(["windowsData"]),n=[];if(i.windowsData)console.log("This is from session:",i.windowsData),t=i.windowsData,console.log("This is windows after loading from session:",t);else{console.log("No window data; loading all tabs into windows"),n=yield chrome.windows.getAll({populate:!0});for(let o=0;o<n.length;o++){let e={window:n[o],tabs:{}};t.push(e)}}for(let i=0;i<t.length;i++){let n=null===(o=t[i].window)||void 0===o?void 0:o.tabs;if(n)for(let o=0;o<n.length;o++){let t=null===(e=n[o])||void 0===e?void 0:e.id;if(!t)throw`Tab ID invalid for tab: ${n[o]}`;console.log("executing content sscript for all the tab"),chrome.scripting.executeScript({target:{tabId:t},files:["dist/content.js"]})}else console.log("no tabs in windows")}}catch(o){console.log("Error populating window:",o)}}))}()}})[994]()})();